/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_bitmagic_core_BVector0 */

#ifndef _Included_io_bitmagic_core_BVector0
#define _Included_io_bitmagic_core_BVector0
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    init0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_init0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    create0
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_create0
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    copy0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_copy0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    dispose0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_dispose0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    version0
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_bitmagic_core_BVector0_version0
  (JNIEnv *, jclass);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    copyright0
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_io_bitmagic_core_BVector0_copyright0
  (JNIEnv *, jclass);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    getSize0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_getSize0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    setSize0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_setSize0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    set0
 * Signature: (JJZ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_set0
  (JNIEnv *, jclass, jlong, jlong, jboolean);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    inc0
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_io_bitmagic_core_BVector0_inc0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    setConditional0
 * Signature: (JJZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_bitmagic_core_BVector0_setConditional0
  (JNIEnv *, jclass, jlong, jlong, jboolean, jboolean);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    flip0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_flip0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    setAll0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_setAll0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    setRange0
 * Signature: (JJJZ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_setRange0
  (JNIEnv *, jclass, jlong, jlong, jlong, jboolean);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    invert0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_invert0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    clear0
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_clear0
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    extract0
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_extract0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    get0
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_io_bitmagic_core_BVector0_get0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    count0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_count0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    countInRange0
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_countInRange0
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    nonEmpty0
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_io_bitmagic_core_BVector0_nonEmpty0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    findFirst0
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_findFirst0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    findLast0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_findLast0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    compare0
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_io_bitmagic_core_BVector0_compare0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    optimize0
 * Signature: (JI)Lio/bitmagic/core/BitVectorStat;
 */
JNIEXPORT jobject JNICALL Java_io_bitmagic_core_BVector0_optimize0
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    calcStat0
 * Signature: (J)Lio/bitmagic/core/BitVectorStat;
 */
JNIEXPORT jobject JNICALL Java_io_bitmagic_core_BVector0_calcStat0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    operation0
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_operation0
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    and0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_and0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    or0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_or0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    sub0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_sub0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    xor0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_xor0
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    andArr0
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_andArr0
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    andArrSorted0
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_andArrSorted0
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    orArr0
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_orArr0
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    xorArr0
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_xorArr0
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    subArr0
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_subArr0
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    deserialize0
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_io_bitmagic_core_BVector0_deserialize0
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     io_bitmagic_core_BVector0
 * Method:    serialize0
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_io_bitmagic_core_BVector0_serialize0
  (JNIEnv *, jclass, jlong, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
